{"version":3,"sources":["js/star-system.js","components/Nav.jsx","pages/IframePage.jsx","assets/mars-badge.png","pages/TestUILook.jsx","assets/3d-models/sun_small.glb","assets/3d-models/mercury_small_brighten.glb","assets/3d-models/venus_small.glb","assets/3d-models/mars_small.glb","pages/AFrameVR.jsx","App.js","index.js"],"names":["window","AFRAME","THREE","registerComponent","schema","color","type","default","radius","min","depth","size","count","texture","update","this","data","transparent","map","TextureLoader","load","starPoints","colorsArray","length","push","randomVectorBetweenSpheres","parseInt","Math","random","stars","BufferGeometry","setFromPoints","setAttribute","Float32BufferAttribute","console","log","starMaterial","PointsMaterial","Object","assign","el","setObject3D","Points","remove","removeObject3D","randomRadius","floor","randomSphereSurfaceVector","theta","PI","phi","acos","x","sin","cos","y","z","Vector3","Nav","setModelName","id","classame","className","to","model","onClick","IframePage","src","modelName","useState","showQuestion","setShowQuestion","msgFromIframe","setMsgFromIframe","useEffect","addEventListener","e","from","msg","Array","fill","n","i","curr","TestUILook","MarsBadge","alt","AFrameVR","embedded","camera","active","position","target","enableDamping","dampingFactor","autoRotate","rotateSpeed","minDistance","maxDistance","intensity","cursor","rayOrigin","SunModel","scale","class","MercuryModel","VenusModel","MarsModel","App","exact","path","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d8e47220.chunk.js","sourcesContent":["/*\n * borrow from handeyeco/aframe-star-system-component with custom edits\n * ~ SCHEMA ~\n *  color       <String>: color of the stars\n *  radius      <Number>: distance from center of sphere to first star sphere\n *  depth       <Number>: distance between star spheres\n *  size        <Number>: size of each individual star\n *  count       <Number>: number of stars per star sphere\n *  texture     <Asset>:  sprite used for individual stars\n */\n\nconst { AFRAME, THREE } = window;\nAFRAME.registerComponent(\"star-system\", {\n  schema: {\n    color: {\n      type: \"string\",\n      default: \"#FFF\",\n    },\n    radius: {\n      type: \"number\",\n      default: 300,\n      min: 0,\n    },\n    depth: {\n      type: \"number\",\n      default: 300,\n      min: 0,\n    },\n    size: {\n      type: \"number\",\n      default: 1,\n      min: 0,\n    },\n    count: {\n      type: \"number\",\n      default: 10000,\n      min: 0,\n    },\n    texture: {\n      type: \"asset\",\n      default: \"\",\n    },\n  },\n\n  update: function () {\n    // Check for and load star sprite\n    let texture = {};\n    if (this.data.texture) {\n      texture.transparent = true;\n      texture.map = new THREE.TextureLoader().load(this.data.texture);\n    }\n\n    // substitute deprecated THREE.Geometry() api with BufferGeometry\n    const starPoints = [];\n    const colorsArray = [];\n    // Randomly create the vertices for the stars\n    while (starPoints.length < this.data.count) {\n      starPoints.push(\n        this.randomVectorBetweenSpheres(this.data.radius, this.data.depth)\n      );\n      colorsArray.push(0, parseInt(Math.random()), parseInt(Math.random()));\n    }\n    let stars = new THREE.BufferGeometry().setFromPoints(starPoints);\n    stars.setAttribute(\n      \"color\",\n      new THREE.Float32BufferAttribute(colorsArray, 3)\n    );\n    console.log(stars, \"<--- stars\");\n\n    // Set the star display options\n    // const starMaterial = new THREE.PointsMaterial(\n    //   Object.assign(texture, {\n    //     color: this.data.color,\n    //     size: this.data.size,\n    //   })\n    // );\n\n    const starMaterial = new THREE.PointsMaterial(\n      Object.assign(texture, {\n        // vertexColors: THREE.VertexColors,\n        color: this.data.color,\n        size: this.data.size,\n      })\n    );\n\n    // Add the star particles to the element\n    this.el.setObject3D(\"star-system\", new THREE.Points(stars, starMaterial));\n  },\n\n  remove: function () {\n    this.el.removeObject3D(\"star-system\");\n  },\n\n  // Returns a random vector between the inner sphere\n  // and the outer sphere created with radius + depth\n  randomVectorBetweenSpheres: function (radius, depth) {\n    const randomRadius = Math.floor(\n      Math.random() * (radius + depth - radius + 1) + radius\n    );\n    return this.randomSphereSurfaceVector(randomRadius);\n  },\n\n  // Returns a vector on the face of sphere with given radius\n  randomSphereSurfaceVector: function (radius) {\n    const theta = 2 * Math.PI * Math.random();\n    const phi = Math.acos(2 * Math.random() - 1);\n    const x = radius * Math.sin(phi) * Math.cos(theta);\n    const y = radius * Math.sin(phi) * Math.sin(theta);\n    const z = radius * Math.cos(phi);\n    return new THREE.Vector3(x, y, z);\n  },\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = ({ setModelName }) => {\n  const models = [\"mars\", \"venus\"];\n\n  return (\n    <nav id=\"nav-bar\">\n      <div classame=\"row\">\n        <Link className=\"button\" to={`/vr`}>\n          VR\n        </Link>\n        <Link className=\"button\" to={`/ar`}>\n          AR\n        </Link>\n        <Link className=\"button\" to={`/ar_no_marker`}>\n          AR no marker\n        </Link>\n        <Link className=\"button\" to=\"/test_ui_look\">\n          Test UI Look\n        </Link>\n      </div>\n      <div className=\"row\">\n        Planet:\n        {models.map((model) => {\n          return (\n            <button\n              key={model}\n              className=\"button\"\n              onClick={() => setModelName(model)}\n            >\n              {model}\n            </button>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useEffect, useState } from \"react\";\nimport Iframe from \"react-iframe\";\n\nconst IframePage = ({ src, modelName }) => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [msgFromIframe, setMsgFromIframe] = useState(null);\n  const toggleShowQuestion = () => {\n    setShowQuestion((curr) => !curr);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"message\", (e) => {\n      if (e.data && e.data.from === \"iframe\") {\n        setMsgFromIframe(e.data.msg);\n      }\n    });\n  }, []);\n  return (\n    <>\n      <p>AR.js embbeded in React app by iframe</p>\n      {msgFromIframe && <span>Msg from iframe: {msgFromIframe}</span>}\n      <div id=\"iframe-container\">\n        <div id=\"question\" className={showQuestion ? \"show\" : \"\"}>\n          <p>Question 1.</p>\n          <p>How many moons does mars has?</p>\n          <div className=\"answer-button-wrapper\">\n            {Array(4)\n              .fill()\n              .map((n, i) => {\n                return (\n                  <button key={i} className=\"answer-button button\" type=\"input\">\n                    {i}\n                  </button>\n                );\n              })}\n          </div>\n          <button\n            className=\"button show-question-button\"\n            onClick={toggleShowQuestion}\n          >\n            Show\n            <br />\n            Quiz\n          </button>\n        </div>\n\n        <Iframe\n          id=\"iframe\"\n          src={modelName ? `${src}?model=${modelName}` : src}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default IframePage;\n","export default __webpack_public_path__ + \"static/media/mars-badge.5d7c3826.png\";","import React from \"react\";\n\nimport MarsBadge from \"../assets/mars-badge.png\";\nimport \"../TestUILook.css\";\n\nconst TestUILook = () => {\n  return (\n    <section id=\"test-ui-look\">\n      <div>\n        <img className=\"badge\" src={MarsBadge} alt=\"mars-badge\" />\n        <p>\n          Mars is the fourth planet from the Sun – a dusty, cold, desert world\n          with a very thin atmosphere. Mars is also a dynamic planet with\n          seasons, polar ice caps, canyons, extinct volcanoes, and evidence that\n          it was even more active in the past.\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default TestUILook;\n","export default __webpack_public_path__ + \"static/media/sun_small.dd23b4a7.glb\";","export default __webpack_public_path__ + \"static/media/mercury_small_brighten.0f6add62.glb\";","export default __webpack_public_path__ + \"static/media/venus_small.ba5eb1dc.glb\";","export default __webpack_public_path__ + \"static/media/mars_small.8e7916d3.glb\";","import React from \"react\";\nimport \"aframe\";\nimport \"aframe-orbit-controls\";\nimport \"../js/star-system\";\nimport { Entity, Scene } from \"aframe-react\";\n\nimport SunModel from \"../assets/3d-models/sun_small.glb\";\nimport MercuryModel from \"../assets/3d-models/mercury_small_brighten.glb\";\nimport VenusModel from \"../assets/3d-models/venus_small.glb\";\nimport MarsModel from \"../assets/3d-models/mars_small.glb\";\n\nconst AFrameVR = () => {\n  return (\n    <Scene vr-mode-ui=\"enabled: false\" embedded className=\"a-scene\">\n      <Entity\n        id=\"camera\"\n        camera={{ active: true }}\n        position=\"0 5 0\"\n        orbit-controls={{\n          target: \"0 0 0\",\n          enableDamping: true,\n          dampingFactor: 0.25,\n          autoRotate: false,\n          rotateSpeed: 0.16,\n          minDistance: 3,\n          maxDistance: 15,\n        }}\n      >\n        <a-light\n          type=\"ambient\"\n          position=\"0 0 0\"\n          // target=\"#target\"\n          color=\"#fff\"\n          intensity=\"1.0\"\n        ></a-light>\n      </Entity>\n\n      <Entity id=\"mouseCursor\" cursor={{ rayOrigin: \"mouse\" }} />\n\n      <Entity\n        id=\"sun\"\n        gltf-model={SunModel}\n        position=\"0 0 0\"\n        scale=\"2.4 2.4 2.4\"\n        class=\"clickable\"\n        // animation=\"property: rotation; from: 0 0 0; to: 0 360 0; dur: 20000; easing: linear; loop: true\"\n        gesture-handler\n      />\n\n      <Entity\n        id=\"mercury\"\n        gltf-model={MercuryModel}\n        position=\"16 0 0\"\n        scale=\"0.15 0.15 0.15\"\n        class=\"clickable\"\n        // animation=\"property: rotation; from: 0 0 0; to: 0 360 0; dur: 20000; easing: linear; loop: true\"\n        gesture-handler\n      />\n\n      <Entity\n        id=\"venus\"\n        gltf-model={VenusModel}\n        position=\"20 0 0\"\n        scale=\"0.372 0.372 0.372\"\n        class=\"clickable\"\n        // animation=\"property: rotation; from: 0 0 0; to: 0 360 0; dur: 20000; easing: linear; loop: true\"\n        gesture-handler\n      />\n\n      <Entity\n        id=\"mars\"\n        gltf-model={MarsModel}\n        position=\"36 0 0\"\n        scale=\"0.29 0.29 0.29\"\n        class=\"clickable\"\n        // animation=\"property: rotation; from: 0 0 0; to: 0 360 0; dur: 20000; easing: linear; loop: true\"\n        gesture-handler\n      />\n\n      {/* <Entity\n        id=\"mars\"\n        gltf-model={MarsModel}\n        position=\"1 1 1\"\n        scale=\"0.3 0.3 0.3\"\n        class=\"clickable\"\n        animation=\"property: rotation; from: 0 0 0; to: 0 360 0; dur: 20000; easing: linear; loop: true\"\n        gesture-handler\n      /> */}\n\n      <a-sky color=\"#000000\"></a-sky>\n      <Entity\n        star-system={{\n          count: 1000,\n          radius: 250,\n          depth: 0,\n          size: 0.5,\n        }}\n      ></Entity>\n    </Scene>\n  );\n};\n\nexport default AFrameVR;\n","import { useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Nav from \"./components/Nav\";\nimport IframePage from \"./pages/IframePage\";\nimport TestUILook from \"./pages/TestUILook\";\nimport AFrameVR from \"./pages/AFrameVR\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [modelName, setModelName] = useState(\"mars\");\n\n  return (\n    <div className=\"App\">\n      <Nav setModelName={setModelName} />\n      <Switch>\n        <Route exact path={[\"/\", \"/vr\"]}>\n          <IframePage src=\"./vr.html\" modelName={modelName} />\n        </Route>\n        <Route exact path=\"/ar\">\n          <IframePage src=\"./ar.html\" modelName={modelName} />\n        </Route>\n        <Route exact path=\"/ar_no_marker\">\n          <IframePage src=\"./ar_no_marker.html\" modelName={modelName} />\n        </Route>\n        <Route exact path=\"/test_ui_look\">\n          <TestUILook />\n        </Route>\n        <Route exact path=\"/aframe_vr\">\n          <AFrameVR />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}